---
// No necesitamos cargar las propuestas en el servidor, las cargaremos din√°micamente
---

<div class="proposals-list">
    <!-- Loading state -->
    <div id="proposals-loading" class="loading-state">
        <div class="loading-spinner"></div>
        <p>Cargando propuestas...</p>
    </div>

    <!-- Error state -->
    <div id="proposals-error" class="error-message" style="display: none;">
        <p>Error cargando propuestas: <span id="error-text"></span></p>
        <button class="btn btn-secondary" onclick="refreshProposals()">üîÑ Reintentar</button>
    </div>

    <!-- Empty state -->
    <div id="proposals-empty" class="empty-state" style="display: none;">
        <p>No hay propuestas creadas a√∫n.</p>
        <p>Crea tu primera propuesta usando el formulario.</p>
    </div>

    <!-- Proposals grid -->
    <div id="proposals-grid" class="proposals-grid" style="display: none;">
        <!-- Las propuestas se cargar√°n din√°micamente aqu√≠ -->
    </div>

    <!-- Refresh button -->
    <div class="refresh-section" style="margin-top: 2rem; text-align: center;">
        <button class="btn btn-secondary" onclick="refreshProposals()">
            üîÑ Actualizar Lista
        </button>
        <p style="font-size: 0.9em; color: #666; margin-top: 0.5rem;">
            √öltima actualizaci√≥n: <span id="last-update">Nunca</span>
        </p>
    </div>
</div>

<script>
    let proposalsData = [];
    let lastUpdateTime = null;

    // Funci√≥n para cargar propuestas
    async function loadProposals() {
        try {
            // Mostrar loading
            document.getElementById('proposals-loading').style.display = 'flex';
            document.getElementById('proposals-error').style.display = 'none';
            document.getElementById('proposals-empty').style.display = 'none';
            document.getElementById('proposals-grid').style.display = 'none';

            // Verificar que el servicio est√© disponible
            if (!window.PropuestasService) {
                throw new Error('Servicio de propuestas no disponible');
            }

            // Cargar propuestas desde Supabase
            const propuestas = await window.PropuestasService.getAllProposals();
            
            if (propuestas && Array.isArray(propuestas)) {
                proposalsData = propuestas;
                renderProposals(propuestas);
                updateLastUpdateTime();
            } else {
                throw new Error('Formato de datos inv√°lido');
            }

        } catch (error) {
            console.error('Error cargando propuestas:', error);
            showProposalsError(error.message);
        }
    }

    // Funci√≥n para renderizar las propuestas
    function renderProposals(propuestas) {
        const grid = document.getElementById('proposals-grid');
        
        if (propuestas.length === 0) {
            // Mostrar estado vac√≠o
            document.getElementById('proposals-loading').style.display = 'none';
            document.getElementById('proposals-empty').style.display = 'block';
            return;
        }

        // Generar HTML de las propuestas
        grid.innerHTML = propuestas.map(propuesta => `
            <div class="proposal-card" data-id="${propuesta.id}">
                <div class="proposal-header">
                    <h3 class="proposal-code">${propuesta.codigo_propuesta}</h3>
                    <div class="proposal-actions">
                        <a 
                            href="/details?code=${propuesta.codigo_propuesta}" 
                            class="btn-view" 
                            target="_blank"
                            title="Ver propuesta"
                        >
                            üëÅÔ∏è
                        </a>
                        <button 
                            class="btn-edit" 
                            data-action="edit-proposal"
                            data-id="${propuesta.id}"
                            title="Editar propuesta"
                        >
                            ‚úèÔ∏è
                        </button>
                        <button 
                            class="btn-delete" 
                            data-action="delete-proposal"
                            data-id="${propuesta.id}"
                            title="Eliminar propuesta"
                        >
                            üóëÔ∏è
                        </button>
                    </div>
                </div>
                
                <div class="proposal-info">
                    <h4 class="project-name">${propuesta.nombre_proyecto || 'Sin nombre'}</h4>
                    <p class="client-info">
                        <strong>Cliente:</strong> ${propuesta.cliente_nombre || 'Sin nombre'}
                        ${propuesta.cliente_empresa ? ` - ${propuesta.cliente_empresa}` : ''}
                    </p>
                    <p class="proposal-date">
                        <strong>Fecha:</strong> ${propuesta.fecha_propuesta ? 
                            new Date(propuesta.fecha_propuesta).toLocaleDateString('es-ES') : 
                            'Sin fecha'
                        }
                    </p>
                    ${propuesta.valor_proyecto ? `
                        <p class="project-value">
                            <strong>Valor:</strong> ${propuesta.valor_proyecto}
                        </p>
                    ` : ''}
                </div>
                
                ${propuesta.servicios_seleccionados && Array.isArray(propuesta.servicios_seleccionados) && propuesta.servicios_seleccionados.length > 0 ? `
                    <div class="services-preview">
                        <p class="services-label"><strong>Servicios:</strong></p>
                        <div class="services-tags">
                            ${propuesta.servicios_seleccionados.slice(0, 3).map(servicio => 
                                `<span class="service-tag">${servicio}</span>`
                            ).join('')}
                            ${propuesta.servicios_seleccionados.length > 3 ? 
                                `<span class="service-tag more">+${propuesta.servicios_seleccionados.length - 3}</span>` : 
                                ''
                            }
                        </div>
                    </div>
                ` : ''}
            </div>
        `).join('');

        // Ocultar loading y mostrar grid
        document.getElementById('proposals-loading').style.display = 'none';
        document.getElementById('proposals-grid').style.display = 'grid';
    }

    // Funci√≥n para mostrar error
    function showProposalsError(message) {
        document.getElementById('proposals-loading').style.display = 'none';
        document.getElementById('proposals-error').style.display = 'block';
        document.getElementById('error-text').textContent = message;
    }

    // Funci√≥n para actualizar tiempo de √∫ltima actualizaci√≥n
    function updateLastUpdateTime() {
        lastUpdateTime = new Date();
        const timeString = lastUpdateTime.toLocaleTimeString('es-ES');
        document.getElementById('last-update').textContent = timeString;
    }

    // Funci√≥n para refrescar propuestas (p√∫blica para AdminDashboard)
    window.refreshProposals = function() {
        loadProposals();
    };

    // Funci√≥n para obtener propuestas (p√∫blica para AdminDashboard)
    window.getProposalsData = function() {
        return proposalsData;
    };

    // Cargar propuestas cuando el DOM est√© listo
    document.addEventListener('DOMContentLoaded', function() {
        loadProposals();
    });
</script>

<style>
    .proposals-list {
        width: 100%;
    }

    .loading-state {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 3rem;
        text-align: center;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 1rem;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .refresh-section {
        border-top: 1px solid #f0f0f0;
        padding-top: 1.5rem;
    }

    .error-message {
        padding: 2rem;
        text-align: center;
        background-color: #fee;
        border: 1px solid #fcc;
        border-radius: 8px;
        color: #c44;
    }

    .empty-state {
        padding: 3rem;
        text-align: center;
        color: #666;
    }

    .empty-state p {
        margin: 0.5rem 0;
    }

    .proposals-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
        padding: 1rem 0;
    }

    .proposal-card {
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .proposal-card:hover {
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
    }

    .proposal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 0.75rem;
        border-bottom: 1px solid #f0f0f0;
    }

    .proposal-code {
        font-family: 'Courier New', monospace;
        font-size: 1.1rem;
        font-weight: bold;
        color: #2c5aa0;
        margin: 0;
    }

    .proposal-actions {
        display: flex;
        gap: 0.5rem;
    }

    .btn-view,
    .btn-edit,
    .btn-delete {
        padding: 0.5rem;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-view {
        background-color: #e3f2fd;
        color: #1976d2;
    }

    .btn-view:hover {
        background-color: #bbdefb;
    }

    .btn-edit {
        background-color: #f3e5f5;
        color: #7b1fa2;
    }

    .btn-edit:hover {
        background-color: #e1bee7;
    }

    .btn-delete {
        background-color: #ffebee;
        color: #d32f2f;
    }

    .btn-delete:hover {
        background-color: #ffcdd2;
    }

    .proposal-info {
        margin-bottom: 1rem;
    }

    .project-name {
        font-size: 1.2rem;
        font-weight: 600;
        color: #333;
        margin: 0 0 0.5rem 0;
        line-height: 1.3;
    }

    .client-info,
    .proposal-date,
    .project-value {
        font-size: 0.9rem;
        color: #666;
        margin: 0.25rem 0;
        line-height: 1.4;
    }

    .services-preview {
        border-top: 1px solid #f0f0f0;
        padding-top: 0.75rem;
    }

    .services-label {
        font-size: 0.85rem;
        color: #666;
        margin: 0 0 0.5rem 0;
    }

    .services-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
    }

    .service-tag {
        background-color: #f5f5f5;
        color: #333;
        padding: 0.2rem 0.5rem;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .service-tag.more {
        background-color: #e0e0e0;
        color: #666;
    }

    @media (max-width: 768px) {
        .proposals-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .proposal-card {
            padding: 1rem;
        }

        .proposal-header {
            flex-direction: column;
            gap: 0.75rem;
            align-items: flex-start;
        }

        .proposal-actions {
            align-self: flex-end;
        }
    }
</style>